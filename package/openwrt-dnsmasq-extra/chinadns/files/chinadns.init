#!/bin/sh /etc/rc.common

START=90
NAME=chinadns
USE_PROCD=1

uci_get_by_type() {
	local ret=$(uci get $NAME.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_bool_by_type() {
	case "$(uci_get_by_type $1 $2)" in
		1|on|true|yes|enabled) return 0;;
	esac
	return 1
}

start_instance() {
	procd_open_instance
	procd_set_param respawn
	procd_set_param stderr 1
	procd_set_param nice -5
	procd_set_param limits nofile="65535 65535"
	[ -e /proc/sys/kernel/core_pattern ] && {
		procd_append_param limits core="unlimited"
	}
	procd_set_param command $@
	procd_close_instance
}

service_triggers() {
	procd_add_reload_trigger $NAME
}

start_service() {
	uci_bool_by_type $NAME enable || exit 0
	mkdir -p /var/etc/

	local alldns=$(uci_get_by_type $NAME cn_dns)
	local subport=$(uci_get_by_type $NAME port)
	local subcdns=$(uci_get_by_type $NAME ww_dns | sed 's;[^ ]*:53;;g')
	for dns in $(uci_get_by_type $NAME ww_dns); do
		let subport=$((subport + 1))
		alldns="${alldns},127.0.0.1#${subport}"
		( echo $dns | grep -q ':53' ) || subcdns="${subcdns} 127.0.0.1:${subport}"
		start_instance /usr/bin/dns-forwarder -p $subport -s $dns
	done

	let subport=$((subport + 1))
	alldns="${alldns},127.0.0.1#${subport}"
	cat <<-EOF > "/var/etc/${NAME}_cdns.json"
	{
	  "global": {
	    "daemon": false,
	    "log": "syslog:daemon"
	  },
	  "cdns": {
	    "listen_port": $subport,
	    "timeout": 2,
	    "servers": [
	      { "ip_port": "9.9.9.9:53" },
	      { "ip_port": "80.80.80.80:53" },
	      { "ip_port": "216.146.35.35:53" },
	      { "ip_port": "112.121.178.187:53" },
	      $(echo $subcdns | sed 's/ /" }, { "ip_port": "/g; s/^/{ "ip_port": "/g; s/$/" }/g; s/, /,\n      /g')
	    ]
	  }
	}
EOF
	start_instance /usr/bin/cdns -c "/var/etc/${NAME}_cdns.json"

	chinadns_cmd="/usr/bin/chinadns -m"
	uci_bool_by_type $NAME bidirectional && chinadns_cmd="$chinadns_cmd -d"
	start_instance $chinadns_cmd \
		-p $(uci_get_by_type $NAME port) \
		-s "$alldns" \
		-c $(uci_get_by_type $NAME chnroute)
}

stop_service() {
	rm -f "/var/etc/${NAME}_cdns.json"
}
